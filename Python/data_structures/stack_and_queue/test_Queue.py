#!env python

from ADT_Queue import ArrayQueue, LinkedQueue
    
def test_ArrayQueue():
    print(" >> Testing ArrayQueue ADT")
    L = [333, 555, 777]
    print(f" >> Build ArrayQueue and initialize with {L}")
    Q = ArrayQueue(L)
    print(" >> Enqueue 10, 20, 30")
    Q.enqueue(10)
    Q.enqueue(20)
    Q.enqueue(30)
    print(Q)
    print(f"Q.dequeue(): {Q.dequeue()}")
    print(" >> Enqueue 40, and __iadd__ 100")
    Q.enqueue(40)
    Q += 100
    print(f"Q.first(): {Q.first()}")
    print(" >> Enqueue 50")
    Q.enqueue(50)
    print(f"Current Queue Length: {len(Q)}")
    print(f"Q.dequeue(): {Q.dequeue()}")
    print(f"Q.dequeue(): {Q.dequeue()}")
    print(" >> Enqueue 1000, 2000")
    Q.enqueue(1000)
    Q.enqueue(2000)
    print(Q)
    print(f"Does Q contains 100? {100 in Q}")
    print(f"Does Q contains 102? {102 in Q}")
    print(f"Which index is is 100? {Q.index(100)}")
    print(f"Which index is is 102? {Q.index(102)}")
    print("...now reverse this queue")
    Q.reverse()
    print(Q)
    print(" >> Enqueue 9")
    Q.enqueue(9)
    print(f"Q.first(): {Q.first()}")
    print(f"Q.dequeue(): {Q.dequeue()}")
    print(" >> Enqueue 50")
    Q.enqueue(50)
    print(Q)
    print(f"Occurrences of 50? {Q.count(50)}")
    print(f"Occurrences of 51? {Q.count(51)}")
    print()

def test_LinkedQueue():
    print(" >> Testing LinkedQueue ADT")
    L = [300, 500, 700]
    print(f" >> Build LinkedQueue and initialize with {L}")
    Q = LinkedQueue(L)
    print(" >> Enqueue 10, 20, 30")
    Q.enqueue(10)
    Q.enqueue(20)
    Q.enqueue(30)
    print(Q)
    print(f"Q.dequeue(): {Q.dequeue()}")
    print(" >> Enqueue 40, and __iadd__ 100")
    Q.enqueue(40)
    Q += 100
    print(f"Q.first(): {Q.first()}")
    print(" >> Enqueue 50")
    Q.enqueue(50)
    print(f"Current Queue Length: {len(Q)}")
    print(f"Q.dequeue(): {Q.dequeue()}")
    print(f"Q.dequeue(): {Q.dequeue()}")
    print(" >> Enqueue 1000, 2000")
    Q.enqueue(1000)
    Q.enqueue(2000)
    print(Q)
    print(f"Does Q contains 100? {100 in Q}")
    print(f"Does Q contains 102? {102 in Q}")
    print(f"Which index is is 100? {Q.index(100)}")
    print(f"Which index is is 102? {Q.index(102)}")
    print("...now reverse this queue")
    Q.reverse()
    print(Q)
    print(" >> Enqueue 9")
    Q.enqueue(9)
    print(f"Q.first(): {Q.first()}")
    print(f"Q.dequeue(): {Q.dequeue()}")
    print(" >> Enqueue 50")
    Q.enqueue(50)
    print(Q)
    print(f"Occurrences of 50? {Q.count(50)}")
    print(f"Occurrences of 51? {Q.count(51)}")
    print(Q)
    print()


if __name__ == "__main__":
    print("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~")
    test_ArrayQueue()
    print("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~")
    test_LinkedQueue()
