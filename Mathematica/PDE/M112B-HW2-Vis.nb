(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    365249,       6580]
NotebookOptionsPosition[    364501,       6550]
NotebookOutlinePosition[    364858,       6566]
CellTagsIndexPosition[    364815,       6563]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sn", "[", 
   RowBox[{"x_", ",", "k_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"Sinh", "[", "\[Pi]", "]"}], "\[Pi]"], 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"2", 
      RowBox[{
       SubsuperscriptBox["\[Sum]", 
        RowBox[{"n", "=", "1"}], "k"], 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "n"], 
          RowBox[{
           SuperscriptBox["n", "2"], "+", "1"}]], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"n", " ", "x"}], "]"}], " ", "-", " ", 
          RowBox[{"n", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"n", " ", "x"}], "]"}]}]}], ")"}]}]}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "x"], ",", " ", 
     RowBox[{"Sn", "[", 
      RowBox[{"x", ",", "1"}], "]"}], ",", " ", 
     RowBox[{"Sn", "[", 
      RowBox[{"x", ",", "5"}], "]"}], ",", " ", 
     RowBox[{"Sn", "[", 
      RowBox[{"x", ",", "12"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", " ", "\"\<Expressions\>\""}]}], " ", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.69413350483185*^9, 3.694133736657341*^9}, {
  3.694133776682906*^9, 3.6941337775670967`*^9}, {3.694133826241197*^9, 
  3.6941338645816803`*^9}, {3.694133926716546*^9, 3.694133933852035*^9}, {
  3.694134002270699*^9, 3.6941340164283333`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAASkkOQ/shCcBh4/KqIiCmPxVpf/AI
HgnAWVcMmg8rpj/giPCdFhoJwDgERO4BNqY/d8jS+DESCcBsUbfQ9kumP6RH
l65oAgnAQIaYyCF4pj/+RSAa1uIIwIq+9d9+0aY/skIy8bCjCMBiVRXRaIin
Pxs8Vp9mJQjAYT+JX5kHqT8bTmMUkxMHwOJZ8Yk8nKw/cu0x6uQTBsCxejNx
EzWwP2b1bbM6GQXAHqhyjklRsj+IHG+VUQkEwLQy+rkZ67Q/AdEx2I0LA8Bw
XS0Mga23P6ikuTOL+AHAW9abPKMUuz/t4K6CjOoAwM08kK6S5b4/E1XLZGbd
/79uy1E7SXjBP6cmw/U1u/2/xjzs1T32wz/pEj5IUL37v3C0ALOwm8Y/adCT
gXLJ+b90B0zC6YrJP0TMc+wWq/e/5mGv/60ozT/N4tYYBrH1v3nrCRMsf9A/
sTfEdneM87/GCSINYtzSP9JdjLvwcfG/D4g9j9KC1T9CPa+Daffuvx3cfQIw
Udg/ljta8/W16r8H8WukpcbbP0dvC+YXvea/1aE/BGhy3z+uH9E7Pm/ivxcq
R3W0/OE/HuWYvuhq3L91ezWRwIbkP5n1mwuAiNS/diXOeas35z///o89QPjH
v6uOPUUDieo/fdAB4KwDsL/dm7iAPQ/uP2KS3ppQka4/dXACCP378D+YPh4x
bZ7IP+vngw+qZPM/kwG2Fxg71D++0CA1zPL1P27qs9Dw0Nw/g93vLW4Z+T8q
RyP3VJ/iP7UeKfrjofw/wWPmApyN5j9ETxXP8y8AQKIDlave0Oo/dKYRE21+
AkAmbj3Ri8vuP31VK4VS8QRAGBuYlBRZ8T9bGSakYKgHQMJABw/hdvM/g1Fu
VeIAC0C+S/PHYnD1P2dyJ3TqjA5AXxhVT2KU9z/T24KUPnYRQFLKMxUXlPk/
qSddUhbJE0AHqzf0w4n7P0u5POYLXRZAYk2xoe6p/T9C5o9zeYoZQA7Vp43O
pf8/OlJ4lprpHEAvDwokFuYAQCaO6L4FiSBAOcvSDUH0AUDDcuSl8N0iQOv5
2ZZG8AJAJ4/36mpWJUBwCRwHiwEEQCjEWmgjYihAn4ucFqoABUALAP89PJ4r
QC6lrzLF+gVA72XsIJo0L0CRn/01HwoHQCtsNuUw0DFAnAyK2FMHCEC0YMfa
Uyg0QI8dNHa+CwhAuOw6u3czNECCLt4TKRAIQDeCyMOhPjRAZ1AyT/4YCEAz
089aCFU0QDKU2sWoKghA9NdKACCCNEDIGyuz/U0IQCKwCi183TRA8yrMjaeU
CECoumqTAJk1QOY7disSmQhACX7FM/CkNUDYTCDJfJ0IQMiu1GzmsDVAvm50
BFKmCEB/cKe35sg1QIiyHHv8twhABi+xFjf5NUAeOm1oUdsIQEs5lzUaWzZA
EUsXBrzfCEDTaiEbdWc2QARcwaMm5AhA6JOo1NZzNkDpfRXf++wIQGIEyNKu
jDZAtMG9Vab+CECE7ndlsb42QKfSZ/MQAwlATeMHVUPLNkCa4xGRewcJQKq4
/zbc1zZAfwVmzFAQCUD9g4ThIvE2QHIWEGq7FAlAfojFsdD9NkBkJ7oHJhkJ
QPmM1oOFCjdAVzhkpZAdCUAf7ZZbQRc3QEpJDkP7IQlAdCjoPAQkN0Al4zcM

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwt2Xk01P/3B3AzYxkpCVHWmRQpqVCJNBcpFEkqSZFQiFSyhMquUGmRkCWE
EkmSwqWSJflI1iwJMdYsM2ay/t7fc35/zXmcM3Ne9/183dd9vc8Zut0Fcwcy
Dw9PNomH53+fxkbC+rN0wbLcF5ec4s/Jwkqn6+NUOcEy9o7wBMvTstAdPv5E
QkqwjCdun46olSx4VTVwt4oKllnmtdVd3S8Lafse5ZwjC5a5nhW3p6vKwoIB
Taq5h1rmG8zDrJiUgdd6ahOvUqlla65tE/LxkQHpXUeTHNdRy07eq10z7icN
0qZnxO+LCZTVMIw3kLashkujW4f6xPjL0tJbypK7JMCR7ZqvtZqvrOv6Z4vd
PuIQLnPh4SFB3rLrlc9ubK5cAaTvW1ujhChltVFd6r/OC0NmWpF6BJdUlrN6
hnKzjQqj3TmBkUM8ZRecLGRCPCggduSrvWPnIiZlfP3mojTPyFD8xN72YR71
v/0N6145xRgU3W1oVjKLEhCXdzG1j+FUfz/gUvU/jPRwkdmZ/Imxp/byiMQL
Dla+EzpWGtyIiZbrslRTOUgJXmJbOdqI3L5mh73xHOwk7WmOPtqE2fM7f12J
4CDfVok0Z6VmXLmZp6HRhYMCOSfm1n9pwf7oyMJ7KhwsB9mIj5yfGH4sPVA4
Zxql9vS3nHzYjd96mlfx57ExTjdQf59DP9JiTbsuZ7JR3OdahdnDfvQw+ZL6
O4mNbjamS9Qq+lHmXYFqyW02mr68lu67dgCdox7s8TjPRuPfjDTl3wPIr2nu
3qPExh9jNjN95oPIiPpWWZrIwoQvmsr+kiN4T88gSiWGhXez4w0d9Eawn1Ns
HhfFwrfjDTcVXEfwtl125xU/FgbwvIc1H0ewY0fElIoVC8mxIxuVnEfRu8dQ
Pn4lCx0iE333vB7DvB2fPb0ip/CLrHudTvQ4Glu2nFgWPIX2QzerXqWOY4/3
EKT6TiH7iHCf8NtxFH8vIvSf8xQ6dy5xifw5jp67TiYpGk3hIxOSSuSaCdTS
na5s4pvCrV22inE5E/jReP1qjeuT+Lps2f26t5No5aK9UO05iaI6PocTvkzi
VIRpr43bJM7cF0q0aJ7Etd88XkacnESJl3vLgtmTGHqwXLdXexI1PevLetSm
0NjCyvkedwJjs+9Q7mVNYcPJyA/jFydwSmHWIiWUhU230r9KOk9g/GU1nZZ7
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
VQI=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
a8gN6y+k1ytyiZG8ScFbSuRDczEBj/bhodLbFJZfG64quErg5gZ2cnYVhaae
y7s3VBMI1Dk7uLuOAsVT7OA+IBChfmDp7kcUcv5IMRV/RCC4Rizs9ycUdkoE
Kvc2E3ilIKH18Smt39ad3PicwJ3ELJ/UZlp/yfr7jVd03pemDyo/ozBjpPs8
tovAlOn39zPPKXilnTEIeE/AU3uhpNULCo1vF5Xa9RNIcCI7415S4GsckjIY
IiC/P1i9+BWF7NDPh1VHCaSdUv50vZ32u+8+LjpBQDdXT7Lob9pP7LnLt0kC
pwLVsg+/pv2cDZ90fycwE1XpZf6G9rtQpvf4J4H6KWbQD5rl3lXnCc8TiM2a
KCjooCAk3SQMBgmN4oxebieFEes3AdEsEhUX/TRyaG6PH3h5V5TErS5/zxGa
a6u/6E+Jk2DcnDqk+pbCxW9z51dJkXA0Hgs2ojlDR0w0VI6EoCpN05TmCG/5
0BtKJIIenTnFo9m7gNs1rkJix6zljR+0n037ChOeOgmfLet3ldK8Wszoip8W
CSWv1Eu/0axiunlJiS6JsS9NwXfo/S6McovsX07CTH/2ujTN32759ausJqG3
+ayzM32+ntH9Vu76JPaGnfOKofNoUD1yK38DCfKwX90xOq8bbhmKncYk7Lgd
QRF0nnlZZ47ImJPYZ2fqtpnOO7758qi9FQmD8IhYkq7HHkalfaYtidSO+2/O
t1FwNnh8r9WehPSHFw6qdD2NQl+qijmTiPEc/JpI11uqf+xrggeJ0AaL0Fm6
P+YUfro98iZxsM3DfHEjhSE71iMhfxJRcqLLGHQ/3a1bdjJqH4n43L7nuQ8p
FP/kz1TtJ1EWcCF/3X0Kx/XWe/84SGKFooZrbTUFj/OOK0PiSMiUt/8ZeoeC
5dudBWUJ9H49AtSL6f5eIbmPOX6MhEr9iYzKv+j7Ji6l3TeLxKB5lezxKxSu
ej4I215MIjya3zVAz1vO6WfdeaUkXI2eJa+k5zHmxVvTjqsk8p0bVPxyKNgZ
/StlX04ihLWTE5lGYUpFu3zTExKL8sLdttDz3+e8RjmhiYT1h6cX7x+g0Jxh
erS+lUTbK8MZyTAKZxfscNjwhsSUdtnrXQEUTHuz/l3xiYRYU5xSjQOFzHOz
q5YuZMEwu7VznQYFsxeJbKnFLPTyEje6LqPwU1iyiy3JgpHmHz1einS/+3AP
T8qz4Mm3fKxD35d6urZNj7VYiNvOD7YYFaD9bqF7oAULiXv9X3tGCZA0pr3c
04aFba/2B98OEmD9L+UMx60s5D++8GunuwDFsU9LDV1YCP1Q4XQaAuzfNDkp
6c9CX9i5j1NCAsi8NkmsSqL9fxN65xDFRxOr1eV6Kgu6tqc8ugL4OLTOWaco
g4VdQ15Bq1z4GCoIfJGay8Km1LTXvqv4qNyZrehRysLVmMYfTaO6cPkyWEY2
spAl26lYvkUXBWLHOuxZbNwmRjTTZ3hIV14ZXivKRl4FR8Kvn4c4fs8SLQk2
2DsGnZY08eC7Rc92To6NHe1K+/pyeNA7+fZxqTYbA905zwL5PDQq8m7N2rBh
Ol0wE++gja/aLccvnmTDJUH4e2yCJgYNwnmSp9nw7AsX9fbTRIe1ytOoM2y8
s59fqW6pido9YUy7EjY8RlSTzBZpIummUuTMHTbm2Lsucej3xy/6QX5bu9g4
UJO2V5DDBcdKlqx+z0bZ4dLOteFcMLc9LOIOsFEYf71Y05GL4Wjp99NjbDhU
+xrVSHNx+2GNQ8kcGwfl64castRx8aXvVwmGCDp8PUo5oerI6+dkRrJEcFSB
VbDRTh0xhE/LFgkRRH6PFtsjoY4QGYmAe1IiGMzUjNs5oQZvjbssrrwIzMVT
lTa2qsFprfeFDGURXLZ857zkmhr+/78WnOUKbremqOF/U/LD0g==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> 
     NCache[{{-Pi, Pi}, {-1.9463332001609468`, 
        23.140689665488438`}}, {{-3.141592653589793, 
       3.141592653589793}, {-1.9463332001609468`, 23.140689665488438`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       SuperscriptBox["\[ExponentialE]", "x"], 
       RowBox[{"Sn", "(", 
         RowBox[{"x", ",", "1"}], ")"}], 
       RowBox[{"Sn", "(", 
         RowBox[{"x", ",", "5"}], ")"}], 
       RowBox[{"Sn", "(", 
         RowBox[{"x", ",", "12"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.694133625652692*^9, {3.694133703834531*^9, 3.694133716073141*^9}, {
   3.694133832451179*^9, 3.69413384602769*^9}, 3.694133935195992*^9, {
   3.6941340040381203`*^9, 3.694134017150734*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sn", "[", 
   RowBox[{"x_", ",", "k_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[Pi]", "2"], "3"], "+", 
   RowBox[{"4", 
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"n", "=", "1"}], "k"], 
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "n"], 
       SuperscriptBox["n", "2"]], 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "x"}], "]"}]}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["x", "2"], ",", " ", 
     RowBox[{"Sn", "[", 
      RowBox[{"x", ",", "1"}], "]"}], ",", " ", 
     RowBox[{"Sn", "[", 
      RowBox[{"x", ",", "5"}], "]"}], ",", " ", 
     RowBox[{"Sn", "[", 
      RowBox[{"x", ",", "12"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", " ", "\"\<Expressions\>\""}]}], " ", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6941339469934464`*^9, 3.694133987161099*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
PTR08A==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
DWdygvdbpvE20v/v/wL4//8X/g8qMs39
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
B2yjO9k=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
3qei//8+9f8ADMraCQ==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> 
     NCache[{{-Pi, Pi}, {-0.7101313988442772, 
        9.869603595407382}}, {{-3.141592653589793, 
       3.141592653589793}, {-0.7101313988442772, 9.869603595407382}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       SuperscriptBox["x", "2"], 
       RowBox[{"Sn", "(", 
         RowBox[{"x", ",", "1"}], ")"}], 
       RowBox[{"Sn", "(", 
         RowBox[{"x", ",", "5"}], ")"}], 
       RowBox[{"Sn", "(", 
         RowBox[{"x", ",", "12"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.694133991432901*^9, 3.694134020265243*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sn", "[", 
   RowBox[{"x_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"2", 
   RowBox[{
    SubsuperscriptBox["\[Sum]", 
     RowBox[{"n", "=", "1"}], "k"], 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"n", "+", "1"}]], "n"], 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "x"}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"Sn", "[", 
      RowBox[{"x", ",", "1"}], "]"}], ",", " ", 
     RowBox[{"Sn", "[", 
      RowBox[{"x", ",", "5"}], "]"}], ",", " ", 
     RowBox[{"Sn", "[", 
      RowBox[{"x", ",", "12"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", " ", "\"\<Expressions\>\""}]}], " ", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.694134041753611*^9, 3.694134092229369*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxN1OlP0nEcwHEu/YmUoijghbqKlm42MGdJmtlhZSZa1mq1NjQ8NsWs4QNz
lj2hkJlJpqax8sCy4dWxMikzp6Y1ZOasTI2MJanDIUMjsNri8+3Be6//4B0s
EKWcIeBwuMQ//fXAfrdd1mDyS4feWcVGFxZyWmKso/siCwa0yxxPZEP8TVUm
AWnfE+Q7pnMBO+K4i231SL/tRxXCDf95KM2rgoaB+fMcwwzNGRSaczqjfJxA
ib/oRjKZBOJHOOMyChFsbngaLl3Gg/PTqpJSAw6kpQ6lCz+vvnCoZPeaI7ps
4KxnzD5+txXM0lRcyh9cAXcPn5ujt1jAt7oxpnO7GWyPfC0uKDWB2lOlXcaz
i2BcdOvlLMsCWMk7YTI/MoDxIoqe0a0HVYEjvBiRDmR9q1J/z54Aq823KBcl
o+CqvSw6drkfLNLgpx8Q20DB9ckafrlqh8OqGBYn5/YAWIF/zGDyRsFcQ6fG
qJkAQ+LXWY4odGBPmp5QK9ODd4k3WiY1BpCdGz0iHVoAmX5Vcq/ji+CrWMz9
i9gEqhNM/YI8M3iamZokkFvAlDfh3gz5Coi1RC71XrGCgsT2Owv3bKDbe6Xs
XeMquNnddT1dj4t1uG1Iu3bnEh78sfKhcq+RAOaR/TEpngQqpLX0+zgnMKyx
ldv3E1musEUEumJg7Zqr44cxF7AsYItYTUGWhE3SNlGRGXxukp2J5Mo/9jWH
IAf8QjttiUhTyLBMKUfqeeJQz2rk+MGgwQt1SHXueVJKE1LS4V/46wmSFZWT
mfwJ6ZHAcH4+hSSd7KlnzyBni7ynrHPIhz3dqU12pFKbYaISyWDNV4/yQgxZ
7CQc5lOR+XRqdpcXMn3jM4ztgzy2Nb3xWgDy37fA33e2Oz8=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
P91Lwqd7SXb/AQbl4us=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
Tesa8w0NvY6PWpUZMlBevrTjQzUNL7tv96m2Y+A33d/jT+toaCwvESp9iIGX
t1HlshtoeOf9aW/F4wykXNpiFNZCw1P/zU8I9GNgr/BnnBmXhmoPP4TciGOg
Nu32vSsjNDQVHDS+coeBRyXtn1ULaOhwMHh8TSYD25Wbf9tR6Wi4zsis7DED
1dRTOClMOlat/3EopoiBjosdqR0SdNyeYB6v/IKBTWtbF5yQo2NkIu3vpo8M
VN6QYfBEgY68O3P/9lYw0NbCebNQmY41C2WrTb4xMG7nQjujeXTsN7hrYvEf
A+vsO4+HqNMxYdemX6wfDJRzuXvukyYdl/+Q3XjmFwO3ux+NnK5Dx+OWovU3
fzPw+plFada6dKxnT151bmFg5bmeglsr6eibw2J1tjJQMiznfdMqOkbcN72u
1MHAzdfdvs9fT8dU/gy5iU4GhsUt6TpsTEeJa0sjo7oY+D55QJizkY72fXnS
37sZSLv7iD24hY4qCRo5lT0MxEeecwwsiS98c8K8ehkYWLx8mb81uV+pve4r
wS/LhvD1bjoe+in7vYHgifJCa+Y+OgaPKDXEErym2svZ/AAdNRzCDJgE+zbo
e0ceouP9czfsNMn9RS28S3VH6OhXqvl8gvQz0lWcMMuNjtS6H02h/xioN+ib
4+BJ+FRo2/GOzOMpXP0yw4uO07Yuffa0jYF51PGqLl/C59l17/b/ZWCfxIuW
JefoeOTsQq0XzURvuXNDp4LoaGJ0Ob+mkeitbMQoCaXjCl6YfkoDA7PVRDMn
I+iIXem3FtYT/bVfa5oQ3yfMfvXJpYbovyJo9aUYOg69n/jo+JWByab0/bK3
CdYDlyvvif5b33vsTqHjAFPc9GUZ0X9n6IXbGXSMe7PRNe8Z0duZlbnwIR2V
H8be+u8RAyND2b2rX9Jx5NwBT6tbDKy6VjkR+IaOE55rddKiGDgt7prU+w90
DFn64MLLCAaGZ0vrWVbR8WbdpL+9PwMvlM846/SHjqPz/NsO2RM+JFRYV6gM
1FGdCFiryMCzbLuQS0wG7usUiedKMTB4erwoRILUefvpkaQYA2/IygsCyB5K
KcSHRI/QsWjWtG6P+eR8zvpmSg3pY9FEhbUxA8WEaUmyhBemzppNVhuJjqF7
kzUu0FFqqe+7rVuIrySMzpn50HGe3sjzDTsYeN5DsSvPhfC8pu+hwUEGynqk
bthnSset67QXrXAh9VQnR0Rr6LjT6GjWMlcGVkwfe12mR0cXk/Y7WicZ+JRV
WRGvRsdw86brykEMdKqZs7abTsdoC2W2YigDayfmOqZM0DDR0vbSDMKLy6OM
ogujNMyxrjs/LZrUb6D8qPxHwyc75SbEYxmYvrzu0tq/JNd2b/dlJjBwRt1l
w9+/aFhlV+k5lcrA02w0eFNFwx/2kv1jZO8j5Qy3sj7TsMVhsyv/HgMNlrv3
XHpHw0Gn9we5JAe6/OxnI8mpMWdac98TBkZ8fr7Z/wkNaUfQrruEgQdCZhgK
HpHcPf7CmnynQc3cBVte3SW56D5W1Ux8UrKOUS+ZSUONE6u2Nn5ioGlj/GBK
Kg2XnvQu/1HJwCyzO3j+Dg0NTz8xratmYLc1b9+DRBrimaGy6jpyXtq9Xi2e
hpt9dNd9Jb71jHE16CE5vOOsR8nnJgb+dM8TUW/S0M7/4cqPJBc0/srfPx5D
Q6dzPY/ftjPwUPmWNC2S48fPay0pI3uWt/3KtjVRJGeDDt9/3sfA1dePSKRH
0jAgJHNhCZf45Je/xkGCQ0Nb056MMLBUQ7/Pl+Drl1Tn5gsYaKUffauH4LgI
h8TcCbLHlS12xeS+lCtJCg8oTCzoury/hdQTa5gWEsNg4jsbDU2HGzR0W3CO
4yfOxOesRTkGpP9az/59h6YxsXC6XMuxWzRc9XL/p60yTDyt6ZM/Tt4ryRJV
K1fKM1HrYa2oO4mGjN1GaSpKTNznZZ1qQPg7lp43nanCxNVNd+1bM2hYPTDX
r38eE+XaGob6Cf8GayM769WZmOkhN9PuIQ2TLomsX2mSz0v9XTXJe4lWd6Is
ezETOzmSl3cX0dBVtWVx5DImxkvuY3Q9J/e5bY/3WcHElubgvU3kvWRQ+prh
aMjEDt/+yRWfyHnrtN+6wEQNe/4Hqe80PJosaz7LlImVCmXRMb+J33qCiqib
mBjkXDfh10HD2yFOkbWWTHRLVDjhxyPnq2vHn1kz8eac4MJoETmvYno0YzeZ
J+ScrBR5z6x8qm7s5cBENYnNk/pz6JhIvZlr78TE4xav9v4l7wmKJUN542Em
tie3uQ2Sffra2T4004OJczhjJUbmdDyslJ1ZfI6JWWfO14SQXKx0VpBNDWJi
dPu9ZVuv0FEvP+xceCgTs4v21ZxOoKNoy5Hde68xUTR5XLaziI7x/lri40nk
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
///Lw///f3lG/wcfIxVr
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> 
     NCache[{{-Pi, Pi}, {-3.4590836770006814`, 
        3.4590896436731033`}}, {{-3.141592653589793, 
       3.141592653589793}, {-3.4590836770006814`, 3.4590896436731033`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"x", 
       RowBox[{"Sn", "(", 
         RowBox[{"x", ",", "1"}], ")"}], 
       RowBox[{"Sn", "(", 
         RowBox[{"x", ",", "5"}], ")"}], 
       RowBox[{"Sn", "(", 
         RowBox[{"x", ",", "12"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.694134056818597*^9, 3.694134095662715*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CosSn", "[", 
   RowBox[{"x_", ",", "k_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["\[Pi]", "2"], "-", 
   RowBox[{
    FractionBox["4", "\[Pi]"], 
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"n", "=", "1"}], "k"], 
     FractionBox[
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "n"}], "-", "1"}], ")"}], "x"}], "]"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "n"}], "-", "1"}], ")"}], 
       "2"]]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SinSn", "[", 
   RowBox[{"x_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"2", 
   RowBox[{
    SubsuperscriptBox["\[Sum]", 
     RowBox[{"n", "=", "1"}], "k"], 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"n", "+", "1"}]], "n"], 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "x"}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Abs", "[", "x", "]"}], ",", " ", 
     RowBox[{"CosSn", "[", 
      RowBox[{"x", ",", "1"}], "]"}], ",", " ", 
     RowBox[{"CosSn", "[", 
      RowBox[{"x", ",", "5"}], "]"}], ",", " ", 
     RowBox[{"CosSn", "[", 
      RowBox[{"x", ",", "12"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", " ", "\"\<Expressions\>\""}]}], " ", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"SinSn", "[", 
      RowBox[{"x", ",", "1"}], "]"}], ",", " ", 
     RowBox[{"SinSn", "[", 
      RowBox[{"x", ",", "5"}], "]"}], ",", " ", 
     RowBox[{"SinSn", "[", 
      RowBox[{"x", ",", "12"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "\[Pi]"}], ",", " ", "\[Pi]"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", " ", "\"\<Expressions\>\""}]}], " ", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6941341499206667`*^9, 3.694134171450921*^9}, {
  3.69413420657018*^9, 3.694134399222472*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF1fs/1XccwHHH7ZwTSi7H7VAeTI+QQs0Qn2/WJnO3qdUuDBGbS5jWSsl6
bJb7JU5F7hHm2tLm8vkKubZx1jxkcqudReWSzsOdbY/H2+f7w+vx/BNeuj6h
HiclJSQkzv7X/37gsPXdFV0uDVKqgRdnOTpcGqTG4mZzeJpcGqTOdAoXTZW4
NEgV2WdVnpLk0iC1/t5OzYEJDg1StXZmc9WFHBqktA4ezfV/i0ODlJaLr0q6
MpsGqfBXplPPlGVpkPIXB9dZacjQIBXHD73qzpWmQYrVbzqYKCdFg1Rp0S/m
8YssGqRejVXGJkxJ0CCl7Nnj5/9kA4OoxKBVfKBhDYNoUsn2iFvTCgZRYF/6
pfCuJQyiw70RL3nlCxhEDycG1GVrxBhENRZtUWcS5jGIhJ8lNMyensMgsrOp
+i5wYRqDKNP6xLz45ykMIvtQOZFakwiDqHJHv7Vt6AQGkc7fgubnQcMYRNfE
N+Ri4h5hEG2sJ9tQix0YREX3j2f63+vAIHL4Xm8m4ZsODKJ0hfq8x4sPMIh2
8UekIpbaMYhcLY27i5dbMYhs/0n5ibeMMYjiQvS9fL/FGERCcb1i9XIzBpG/
9GiEw0oTBlGS7h6r86sNGEQjn3Q9GF+vxyCK7mONVUhVYxAZqwt4C/JVGERe
ycbBGUqVGERt0Z6av2tXYBAlnSiJPLy/FINIT8Vx994v8jCIynl4Q/DwJgaR
oszzij8GszGIhsYt2Q4zAgyi0BtPGsz5qRhEpcoKwmGXJAyi8NnPjT1OXsEg
YpdJjh9Mi8UgKlC4HeXnHo1BZNHhZOR64WsMoizWOI44+iUGUcykm0ea9zEM
ont0zFdyVYg4XXREWj7blzghiHHWyj9NdBkdFuyLPEscTuO/LiiMISrd7c7a
k3iZeGHV4KmddwJxKDmoTaSfQozMP6RWoZFGLGubaXxbKpPIk3PiOA3kEH3S
Rq67pVYSWauXjV7nVRH7alVHHD6uJobxG0NeBNQQq2c4KSY/1BH3ZRYI77TX
EwVzU+XeujSjrY5p8M1OYjrrrpq69SNiyFRd32zfMNHQXm/ho9wJYouvSDI7
UUQskLpaPtI3RTQIsemP75kmqmsJMlSOzxHvU+xt41HzxGbH+Q6fMDHRS93T
1SdjgejRba6qlrFEZJdbvGn9cYXo41yTP317jbj1z5LE34o3iHu3bdHniSSo
TS17hAqH3rCIL5YeZ74/K0kM4/LZ8SxpYm58Nq9MQoZoUlxl1r7MmJq7dmDH
FjYxW/7K4IdsDjFZe39UsxxjrMmI8m5FxgA3M9d1dUazjKH2UkPGTi2jujVn
xnnD3sSSDEaRdZSR0jXGQaedXedzGJtDIqU9bjHG1fLPrdYz6lgFn3L/i3G7
o5ps4yij9KcthQbPGCejVUdXXjLeaWnyvLXOWCIMmFeU4hKvP92eeo7NeFHG
v9dNkTGcpxjUoMLot+tXtoEG47F3/IpTtBk3v7vpv8hkidw=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
fKghIUrnf/cP/m9/Af3//sL/AEgOktE=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJw12Hk4F1v8wPGvdc63pK9dWVKkxZLlVpb4nIoisqaISptwiVSuKFTc3OxZ
UhQhhDL2NTP2lPiiRYul5Qp19S1Jtvzm9zy/31/zvOeZOc+cc/6Z11l5xMfu
OD+LxRLnY7H+97rLXHT77Eo2DYRHP5GBsJRHCA8psmnj3xX5fEwPRfBuSS9n
005NxhJf0xEuzDtsoSLNphdlJ8lwmf7rUc8vbXE27elVVpXN9LaR7Tkgyqb3
O01NeTEtisrtdy9i0+JCii/XMv1qjSqfszCbNrCycOy7jXD2zusP3PnZtJ++
UHAQ0z4nkIv/b0Tvf/qHhTjTBlfOscNmEC0xurop7RbCwrljFfE/Eb1V6sro
cqa7W52PpX9HdIq1R2NUGsJpwx1i98cRPcQFu++pCLsLG1M1Y4iOfTp4y4Lp
36ZKy1+8R/QXu+oLr24g3H48vu3DAKI188IURJlODOc/++01ok28t8RtSkFY
reVjl0gvojlzteyjyQj//OhwYXkXovX7ZVecSEK4UbBt/doniM6OjlQ5lIiw
o8m98O1NiJ478V1J7RrCyseW69pSiM6cP7VuIQ7h8cuRQwdrEZ2BFUzbYhEO
b/I2DCxF9Jlc0X7daIRLtul8I7MQ7bhOujzkCsIXjmTdrk9H9FiDQuBkOMJm
lyQtO1IR3RlO3zsUhvBgw8+cTwmInvmuHSR2EWGRrbUuimGIrhnX3P/lHMIv
XdUXqYciGipF/hUOQDgz9Fal/nlEe3C/7pT2R1ifDhF3OINory9kj4Qfwm5g
8ijyGKKnjOWqIj0Q1j5UfvaGK6Jtst7UWZ1AeC5YVTnXhfle8TA54jjCCfUo
uHEPsx4bdDQcXRGmjZ7qTpsgOq8lIOPCXoTltuxNd1uN6A7bntvDGOGjvutt
V6xENM2y/9huhHBB9m/+PnlEN9V0yGYaIGy4JNfNXBLRpqs7Hmr/gbDzwJSG
ugCiP7PDxbtVEU4NvVH3bYiga1zK7qxbxIzf8vbV+TSCjjlRpiH/mMBHp8nI
jSkE7fdObOhlC4ELNMKNxhMI2s420DOqgcCGyRp3DkUStKSnf8xQFYGdTwS7
bwskaEtTqza9XAKnspWmCEeCHm8PKGu9RGA5q6OSCRIEzXFXlTbdROCUiBrn
xKUE/ThqcySpTWDpJrGspMUEbZTU6bZMg8AcPVo7RYCgnd3lqz8oE1h4lYL1
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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> 
     NCache[{{-Pi, Pi}, {0., 3.1415925253615216`}}, {{-3.141592653589793, 
       3.141592653589793}, {0., 3.1415925253615216`}}], PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TemplateBox[{"x"}, "Abs"], 
       RowBox[{"CosSn", "(", 
         RowBox[{"x", ",", "1"}], ")"}], 
       RowBox[{"CosSn", "(", 
         RowBox[{"x", ",", "5"}], ")"}], 
       RowBox[{"CosSn", "(", 
         RowBox[{"x", ",", "12"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.694134259465507*^9, 3.69413427158771*^9}, {
  3.6941343130894947`*^9, 3.694134319341922*^9}, {3.694134379273323*^9, 
  3.6941344000651903`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxN1OlP0nEcwHEu/YmUoijghbqKlm42MGdJmtlhZSZa1mq1NjQ8NsWs4QNz
lj2hkJlJpqax8sCy4dWxMikzp6Y1ZOasTI2MJanDIUMjsNri8+3Be6//4B0s
EKWcIeBwuMQ//fXAfrdd1mDyS4feWcVGFxZyWmKso/siCwa0yxxPZEP8TVUm
AWnfE+Q7pnMBO+K4i231SL/tRxXCDf95KM2rgoaB+fMcwwzNGRSaczqjfJxA
ib/oRjKZBOJHOOMyChFsbngaLl3Gg/PTqpJSAw6kpQ6lCz+vvnCoZPeaI7ps
4KxnzD5+txXM0lRcyh9cAXcPn5ujt1jAt7oxpnO7GWyPfC0uKDWB2lOlXcaz
i2BcdOvlLMsCWMk7YTI/MoDxIoqe0a0HVYEjvBiRDmR9q1J/z54Aq823KBcl
o+CqvSw6drkfLNLgpx8Q20DB9ckafrlqh8OqGBYn5/YAWIF/zGDyRsFcQ6fG
qJkAQ+LXWY4odGBPmp5QK9ODd4k3WiY1BpCdGz0iHVoAmX5Vcq/ji+CrWMz9
i9gEqhNM/YI8M3iamZokkFvAlDfh3gz5Coi1RC71XrGCgsT2Owv3bKDbe6Xs
XeMquNnddT1dj4t1uG1Iu3bnEh78sfKhcq+RAOaR/TEpngQqpLX0+zgnMKyx
ldv3E1musEUEumJg7Zqr44cxF7AsYItYTUGWhE3SNlGRGXxukp2J5Mo/9jWH
IAf8QjttiUhTyLBMKUfqeeJQz2rk+MGgwQt1SHXueVJKE1LS4V/46wmSFZWT
mfwJ6ZHAcH4+hSSd7KlnzyBni7ynrHPIhz3dqU12pFKbYaISyWDNV4/yQgxZ
7CQc5lOR+XRqdpcXMn3jM4ztgzy2Nb3xWgDy37fA33e2Oz8=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
P91Lwqd7SXb/AQbl4us=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
Tesa8w0NvY6PWpUZMlBevrTjQzUNL7tv96m2Y+A33d/jT+toaCwvESp9iIGX
t1HlshtoeOf9aW/F4wykXNpiFNZCw1P/zU8I9GNgr/BnnBmXhmoPP4TciGOg
Nu32vSsjNDQVHDS+coeBRyXtn1ULaOhwMHh8TSYD25Wbf9tR6Wi4zsis7DED
1dRTOClMOlat/3EopoiBjosdqR0SdNyeYB6v/IKBTWtbF5yQo2NkIu3vpo8M
VN6QYfBEgY68O3P/9lYw0NbCebNQmY41C2WrTb4xMG7nQjujeXTsN7hrYvEf
A+vsO4+HqNMxYdemX6wfDJRzuXvukyYdl/+Q3XjmFwO3ux+NnK5Dx+OWovU3
fzPw+plFada6dKxnT151bmFg5bmeglsr6eibw2J1tjJQMiznfdMqOkbcN72u
1MHAzdfdvs9fT8dU/gy5iU4GhsUt6TpsTEeJa0sjo7oY+D55QJizkY72fXnS
37sZSLv7iD24hY4qCRo5lT0MxEeecwwsiS98c8K8ehkYWLx8mb81uV+pve4r
wS/LhvD1bjoe+in7vYHgifJCa+Y+OgaPKDXEErym2svZ/AAdNRzCDJgE+zbo
e0ceouP9czfsNMn9RS28S3VH6OhXqvl8gvQz0lWcMMuNjtS6H02h/xioN+ib
4+BJ+FRo2/GOzOMpXP0yw4uO07Yuffa0jYF51PGqLl/C59l17/b/ZWCfxIuW
JefoeOTsQq0XzURvuXNDp4LoaGJ0Ob+mkeitbMQoCaXjCl6YfkoDA7PVRDMn
I+iIXem3FtYT/bVfa5oQ3yfMfvXJpYbovyJo9aUYOg69n/jo+JWByab0/bK3
CdYDlyvvif5b33vsTqHjAFPc9GUZ0X9n6IXbGXSMe7PRNe8Z0duZlbnwIR2V
H8be+u8RAyND2b2rX9Jx5NwBT6tbDKy6VjkR+IaOE55rddKiGDgt7prU+w90
DFn64MLLCAaGZ0vrWVbR8WbdpL+9PwMvlM846/SHjqPz/NsO2RM+JFRYV6gM
1FGdCFiryMCzbLuQS0wG7usUiedKMTB4erwoRILUefvpkaQYA2/IygsCyB5K
KcSHRI/QsWjWtG6P+eR8zvpmSg3pY9FEhbUxA8WEaUmyhBemzppNVhuJjqF7
kzUu0FFqqe+7rVuIrySMzpn50HGe3sjzDTsYeN5DsSvPhfC8pu+hwUEGynqk
bthnSset67QXrXAh9VQnR0Rr6LjT6GjWMlcGVkwfe12mR0cXk/Y7WicZ+JRV
WRGvRsdw86brykEMdKqZs7abTsdoC2W2YigDayfmOqZM0DDR0vbSDMKLy6OM
ogujNMyxrjs/LZrUb6D8qPxHwyc75SbEYxmYvrzu0tq/JNd2b/dlJjBwRt1l
w9+/aFhlV+k5lcrA02w0eFNFwx/2kv1jZO8j5Qy3sj7TsMVhsyv/HgMNlrv3
XHpHw0Gn9we5JAe6/OxnI8mpMWdac98TBkZ8fr7Z/wkNaUfQrruEgQdCZhgK
HpHcPf7CmnynQc3cBVte3SW56D5W1Ux8UrKOUS+ZSUONE6u2Nn5ioGlj/GBK
Kg2XnvQu/1HJwCyzO3j+Dg0NTz8xratmYLc1b9+DRBrimaGy6jpyXtq9Xi2e
hpt9dNd9Jb71jHE16CE5vOOsR8nnJgb+dM8TUW/S0M7/4cqPJBc0/srfPx5D
Q6dzPY/ftjPwUPmWNC2S48fPay0pI3uWt/3KtjVRJGeDDt9/3sfA1dePSKRH
0jAgJHNhCZf45Je/xkGCQ0Nb056MMLBUQ7/Pl+Drl1Tn5gsYaKUffauH4LgI
h8TcCbLHlS12xeS+lCtJCg8oTCzoury/hdQTa5gWEsNg4jsbDU2HGzR0W3CO
4yfOxOesRTkGpP9az/59h6YxsXC6XMuxWzRc9XL/p60yTDyt6ZM/Tt4ryRJV
K1fKM1HrYa2oO4mGjN1GaSpKTNznZZ1qQPg7lp43nanCxNVNd+1bM2hYPTDX
r38eE+XaGob6Cf8GayM769WZmOkhN9PuIQ2TLomsX2mSz0v9XTXJe4lWd6Is
ezETOzmSl3cX0dBVtWVx5DImxkvuY3Q9J/e5bY/3WcHElubgvU3kvWRQ+prh
aMjEDt/+yRWfyHnrtN+6wEQNe/4Hqe80PJosaz7LlImVCmXRMb+J33qCiqib
mBjkXDfh10HD2yFOkbWWTHRLVDjhxyPnq2vHn1kz8eac4MJoETmvYno0YzeZ
J+ScrBR5z6x8qm7s5cBENYnNk/pz6JhIvZlr78TE4xav9v4l7wmKJUN542Em
tie3uQ2Sffra2T4004OJczhjJUbmdDyslJ1ZfI6JWWfO14SQXKx0VpBNDWJi
dPu9ZVuv0FEvP+xceCgTs4v21ZxOoKNoy5Hde68xUTR5XLaziI7x/lri40nk
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
///Lw///f3lG/wcfIxVr
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> 
     NCache[{{-Pi, Pi}, {-3.4590836770006814`, 
        3.4590896436731033`}}, {{-3.141592653589793, 
       3.141592653589793}, {-3.4590836770006814`, 3.4590896436731033`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"x", 
       RowBox[{"SinSn", "(", 
         RowBox[{"x", ",", "1"}], ")"}], 
       RowBox[{"SinSn", "(", 
         RowBox[{"x", ",", "5"}], ")"}], 
       RowBox[{"SinSn", "(", 
         RowBox[{"x", ",", "12"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.694134259465507*^9, 3.69413427158771*^9}, {
  3.6941343130894947`*^9, 3.694134319341922*^9}, {3.694134379273323*^9, 
  3.6941344002644978`*^9}}]
}, Open  ]]
},
WindowSize->{808, 652},
WindowMargins->{{Automatic, 221}, {Automatic, 4}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1748, 49, 95, "Input"],
Cell[2331, 73, 90668, 1578, 274, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93036, 1656, 1212, 36, 94, "Input"],
Cell[94251, 1694, 50513, 920, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144801, 2619, 1096, 32, 86, "Input"],
Cell[145900, 2653, 88933, 1548, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234870, 4206, 2307, 70, 181, "Input"],
Cell[237180, 4278, 38257, 717, 245, "Output"],
Cell[275440, 4997, 89045, 1550, 240, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

